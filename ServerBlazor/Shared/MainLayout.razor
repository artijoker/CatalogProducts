@using Blazored.Toast
@using Blazored.Toast.Configuration
@using HttpModels

@inject IClock Clock
@inherits LayoutComponentBase
@implements IDisposable
<PageTitle>ServerBlazor</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (@_stock is not null)
            {
                <div class="mx-auto">@_stock</div>
            } 
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<BlazoredToasts Position="ToastPosition.TopRight"
                Timeout="2"
                IconType="IconType.FontAwesome"
                ShowCloseButton="false"
                MaxToastCount="1" />
@code {
    private DateTime _timerEnd = DateTime.Today.AddDays(1);
    private CancellationTokenSource _cts = new();
    private string? _stock;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if(Clock.GetClock().DayOfWeek == DayOfWeek.Wednesday)
            _ = StartTimer();
    }

    private async Task StartTimer()
    {
        using (PeriodicTimer timer = new(TimeSpan.FromSeconds(1)))
        {
            try
            {
                while (await timer.WaitForNextTickAsync(_cts.Token))
                {
                    var time = _timerEnd - DateTime.Now;
                    _stock = $"Осталось до окончания акции {time.Hours:d2}:{time.Minutes:d2}:{time.Seconds:d2}";
                    StateHasChanged();
                }
            }
            catch (OperationCanceledException)
            {
                return;
            }
        }
    }

    public void Dispose()
    {
        _cts.Cancel();
    }
}


